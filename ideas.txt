Idea 1:
use a test case that iterates through the function a large amount of times (1000 maybe). as long as the system returns
all outputs expected it is fine.
furthermore, implement a system that uses law of averages within a bound to pass the test. If behaviour 1
occurs 1% of the expected time, then a bound within 0.01% to 3% may be acceptable within 1000 passes.

Idea 2:
Force the code to be deterministic. If we know that the output can happen, write temporary code to test the system to
force the outcome. less official than first idea and more brute force.

Idea 3:
make tests in dev code that are different to prod code. The code can have prepopulated file of determined outcomes,
used from the function call that is deterministic

Idea 4:
allow the test case to be happy from any non-deterministic output, as long as it is one of the correct outputs it passes.